AWSTemplateFormatVersion: "2010-09-09"
Description: VPC creation
      
Parameters:
  environment:
    Type: String
    AllowedValues:
      - dev
      - stage
      - testing
  product:
    Type: String
    Default: manish
  service:
    Type: String
    Default: vpc

Mappings:
  accounts:
    "313686187887":
      environment: dev
      cidr: 10.91.0.0/16
    "313686187888":
      environment: stage
      cidr: 10.92.0.0/16
    accountIds:
      accountIds:
        - "313686187887"
        - "313686187888"

Resources:
  vpc:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !FindInMap
        - accounts
        - !Ref "AWS::AccountId"
        - cidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        -
          Key: Name
          Value: !Sub ${environment}-${product}-${service}
  publicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Select [ 1, !Cidr [ !GetAtt vpc.CidrBlock, 256, 8 ]]
      VpcId: !Ref vpc
      AvailabilityZone: !Sub ${AWS::Region}a
      Tags:
        - Key: Name
          Value: !Sub ${environment}-${product}-${service}-public-subnet-a
  publicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Select [ 2, !Cidr [ !GetAtt vpc.CidrBlock, 256, 8 ]]
      VpcId: !Ref vpc
      AvailabilityZone: !Sub ${AWS::Region}b
      Tags:
        - Key: Name
          Value: !Sub ${environment}-${product}-${service}-public-subnet-b

  privateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Select [ 101, !Cidr [ !GetAtt vpc.CidrBlock, 256, 8 ]] 
      VpcId: !Ref vpc
      AvailabilityZone: !Sub ${AWS::Region}a
      Tags:
        - Key: Name
          Value: !Sub ${environment}-${product}-${service}-private-subnet-a
  privateSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Select [ 102, !Cidr [ !GetAtt vpc.CidrBlock, 256, 8 ]]
      VpcId: !Ref vpc
      AvailabilityZone: !Sub ${AWS::Region}b
      Tags:
        - Key: Name
          Value: !Sub ${environment}-${product}-${service}-private-subnet-b

  igw:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        -
          Key: Name
          Value: !Sub ${environment}-${product}-${service}-igw
  IGAttach:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref vpc
      InternetGatewayId: !Ref igw
  publicRouteTableA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref vpc
      Tags:
        -
          Key: Name
          Value: !Sub ${environment}-${product}-${service}-public-route-table-a
  privateRouteTableA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref vpc
      Tags:
        -
          Key: Name
          Value: !Sub ${environment}-${product}-${service}-private-route-table-a
  publicRtAssocA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref publicSubnetA
      RouteTableId: !Ref publicRouteTableA
  publicRtAssocB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref publicSubnetB
      RouteTableId: !Ref publicRouteTableA

  privateRtAssocA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref privateSubnetA
      RouteTableId: !Ref privateRouteTableA
  privateRtAssocB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref privateSubnetB
      RouteTableId: !Ref privateRouteTableA
  
  internetRouteA:
    Type: AWS::EC2::Route
    DependsOn: IGAttach
    Properties:
      GatewayId: !Ref igw
      RouteTableId: !Ref publicRouteTableA
      DestinationCidrBlock: 0.0.0.0/0
  generalSG:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Shared and SG itself, and this VPC
      SecurityGroupIngress:
        -
          IpProtocol: -1
          FromPort: 0
          ToPort: 65535
          CidrIp: !FindInMap
            - accounts
            - !Ref AWS::AccountId
            - cidr
        -
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
          Description: Allowed HTTP Traffic for All
        -
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
          Description: Allowed HTTPS Traffic for All
        -
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 122.160.234.6/32
          Description: Allowed only for impressico primises
      VpcId: !Ref vpc
      Tags:
        -
          Key: Name
          Value: !Sub ${environment}-${product}-${service}-generalSG

Outputs:
  vpc:
    Description: Logical ID
    Value: !Ref vpc
    Export:
      Name: !Sub ${environment}-${product}-${service}
  publicSubnetA:
    Description: Logical ID of public SubnetA
    Value: !Ref publicSubnetA
    Export:
      Name: !Sub ${environment}-${product}-${service}-public-subnet-a
  publicSubnetB:
    Description: Logical ID of public SubnetB
    Value: !Ref publicSubnetB
    Export:
      Name: !Sub ${environment}-${product}-${service}-public-subnet-b

  privateSubnetA:
    Description: Logical ID
    Value: !Ref privateSubnetA
    Export:
      Name: !Sub ${environment}-${product}-${service}-private-subnet-a
  privateSubnetB:
    Description: Logical ID
    Value: !Ref privateSubnetB
    Export:
      Name: !Sub ${environment}-${product}-${service}-private-subnet-b

  publicRouteTableA:
    Description: Logical ID
    Value: !Ref publicRouteTableA
    Export:
      Name: !Sub ${environment}-${product}-${service}-public-route-table-a
  privateRouteTableA:
    Description: Private Route Table Logical ID
    Value: !Ref privateRouteTableA
    Export:
      Name: !Sub ${environment}-${product}-${service}-private-route-table-a
  generalSG:
    Description: General use SG Group ID
    Value:
      Fn::GetAtt:
        - generalSG
        - GroupId
    Export:
      Name: !Sub ${environment}-${product}-${service}-generalSG
