AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  DBEngine:
    Type: String
    Description:  choose the database
    Default: mysql
  DBInstanceIdentifier:
    Type: String
    Description: The identifier for the RDS instance
    Default: mydbinstance
  DBMasterUsername:
    Type: String
    Description: The username for the RDS master user
    Default: root
  DBMasterUserPassword:
    Type: String
    Description: The password for the RDS master user
    NoEcho: true
    Default: password
  DBAllocatedStorage:
    Type: Number
    Description: The amount of storage to allocate for the RDS instance (in GB)
    Default: 8
  DBInstanceClass:
    Type: String
    Description: The RDS instance class
    Default: db.t2.micro
    AllowedValues:
      - db.t2.micro
      - db.t2.small
      - db.t2.medium	
  InstanceType:
    Type: String
    Description: EC2 instance type
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - m5.large
      - m5.xlarge
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Default: manishkey-ohio
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  NameTag:
    Type: String
    Description: Name tag to apply to the EC2 instance
    Default: manish-RDS
  ImageId: 
    Type: String
    Default: ami-024e6efaf93d85776 #ami-007855ac798b5175e
Resources:
  PubPrivateVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref PubPrivateVPC
      AvailabilityZone: !Sub ${AWS::Region}a
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref PubPrivateVPC
      AvailabilityZone: !Sub ${AWS::Region}b
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: true

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref PubPrivateVPC
      AvailabilityZone: !Sub ${AWS::Region}a
      CidrBlock: 10.0.3.0/24
      MapPublicIpOnLaunch: false

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref PubPrivateVPC
      AvailabilityZone: !Sub ${AWS::Region}b
      CidrBlock: 10.0.4.0/24
      MapPublicIpOnLaunch: false

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  GatewayToInternet:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref PubPrivateVPC
      InternetGatewayId: !Ref InternetGateway

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref PubPrivateVPC

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: GatewayToInternet
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  NatGateway:
    Type: AWS::EC2::NatGateway
    DependsOn: NatPublicIP
    Properties:
      SubnetId: !Ref PublicSubnet1
      AllocationId: !GetAtt NatPublicIP.AllocationId

  NatPublicIP:
    Type: AWS::EC2::EIP
    DependsOn: PubPrivateVPC
    Properties:
      Domain: vpc

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref PubPrivateVPC

  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      NatGatewayId: !Ref NatGateway
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable
     
  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable

  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: My security group
      VpcId: !Ref PubPrivateVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
  MyDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: My DB Subnet Group
      SubnetIds:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
        
  MyDBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: !Ref DBAllocatedStorage
      DBInstanceIdentifier: !Ref DBInstanceIdentifier
      Engine: !Ref DBEngine
      EngineVersion: "8.0.32"
      MasterUsername: !Ref DBMasterUsername
      MasterUserPassword: !Ref DBMasterUserPassword
      DBInstanceClass: !Ref DBInstanceClass 
      VPCSecurityGroups:
        - !Ref MySecurityGroup
      DBSubnetGroupName: !Ref MyDBSubnetGroup
      Tags:
        - Key: Name
          Value: manish-RDS

  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SubnetId: !Ref PublicSubnet1
      SecurityGroupIds:
        - !Ref MySecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo su
          sudo apt-get install mysql-client
          RDS_ENDPOINT=$(aws rds describe-db-instances --db-instance-identifier ${AWS::StackName}-RDSInstance --query 'DBInstances[0].Endpoint.Address' --output text)
          mysql -h $RDS_ENDPOINT -P 3306 -u deepdb -ppasswd123 -e "
          CREATE DATABASE dummy1;
          USE dummy1;
          CREATE TABLE users (id INT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));
          INSERT INTO users (name, email) VALUES ('Manish', 'manish@gmail.com'), ('Deepak', 'deepak@gmail.com');"
      Tags:
        - Key: Name
          Value: manish-RDS-ec2
